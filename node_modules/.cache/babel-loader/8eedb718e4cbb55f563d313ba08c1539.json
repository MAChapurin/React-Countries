{"ast":null,"code":"export const SET_COUNTRIES = \"@@country/SET_COUNTRIES\";\nexport const SET_LOADING = \"@@country/SET_LOADING\";\nexport const SET_ERROR = \"@@country/SET_ERROR\";\nexport const setCountries = countries => ({\n  type: SET_COUNTRIES,\n  payload: countries\n});\nexport const seLoading = () => ({\n  type: SET_LOADING\n});\nexport const setError = error => ({\n  type: SET_ERROR,\n  payload: error\n}); //_ здесь мог бы быть getState\n\nexport const loadCountries = () => (dispatch, _, _ref) => {\n  let {\n    client,\n    api\n  } = _ref;\n  dispatch(seLoading());\n  client.get(api.ALL_COUNTRIES).then(_ref2 => {\n    let {\n      data\n    } = _ref2;\n    return dispatch(setCountries(data));\n  }).catch(error => dispatch(setError(error.message)));\n};","map":{"version":3,"sources":["/Users/a1/Desktop/proj2-starter/src/store/countries/countries-actions.js"],"names":["SET_COUNTRIES","SET_LOADING","SET_ERROR","setCountries","countries","type","payload","seLoading","setError","error","loadCountries","dispatch","_","client","api","get","ALL_COUNTRIES","then","data","catch","message"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,yBAAtB;AACP,OAAO,MAAMC,WAAW,GAAG,uBAApB;AACP,OAAO,MAAMC,SAAS,GAAG,qBAAlB;AAEP,OAAO,MAAMC,YAAY,GAAIC,SAAD,KAAgB;AAC1CC,EAAAA,IAAI,EAAEL,aADoC;AAE1CM,EAAAA,OAAO,EAAEF;AAFiC,CAAhB,CAArB;AAKP,OAAO,MAAMG,SAAS,GAAG,OAAO;AAC9BF,EAAAA,IAAI,EAAEJ;AADwB,CAAP,CAAlB;AAIP,OAAO,MAAMO,QAAQ,GAAIC,KAAD,KAAY;AAClCJ,EAAAA,IAAI,EAAEH,SAD4B;AAElCI,EAAAA,OAAO,EAAEG;AAFyB,CAAZ,CAAjB,C,CAKP;;AACA,OAAO,MAAMC,aAAa,GACxB,MACA,CAACC,QAAD,EAAWC,CAAX,WAAkC;AAAA,MAApB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAoB;AAChCH,EAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AAEAM,EAAAA,MAAM,CACHE,GADH,CACOD,GAAG,CAACE,aADX,EAEGC,IAFH,CAEQ;AAAA,QAAC;AAAEC,MAAAA;AAAF,KAAD;AAAA,WAAcP,QAAQ,CAACR,YAAY,CAACe,IAAD,CAAb,CAAtB;AAAA,GAFR,EAGGC,KAHH,CAGUV,KAAD,IAAWE,QAAQ,CAACH,QAAQ,CAACC,KAAK,CAACW,OAAP,CAAT,CAH5B;AAID,CATI","sourcesContent":["export const SET_COUNTRIES = \"@@country/SET_COUNTRIES\";\nexport const SET_LOADING = \"@@country/SET_LOADING\";\nexport const SET_ERROR = \"@@country/SET_ERROR\";\n\nexport const setCountries = (countries) => ({\n  type: SET_COUNTRIES,\n  payload: countries,\n});\n\nexport const seLoading = () => ({\n  type: SET_LOADING,\n});\n\nexport const setError = (error) => ({\n  type: SET_ERROR,\n  payload: error,\n});\n\n//_ здесь мог бы быть getState\nexport const loadCountries =\n  () =>\n  (dispatch, _, { client, api }) => {\n    dispatch(seLoading());\n\n    client\n      .get(api.ALL_COUNTRIES)\n      .then(({ data }) => dispatch(setCountries(data)))\n      .catch((error) => dispatch(setError(error.message)));\n  };\n"]},"metadata":{},"sourceType":"module"}