{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/proj2-starter/src/pages/HomePage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { List } from '../components/List';\nimport { Card } from '../components/Card';\nimport { Controls } from '../components/Controls';\nimport { selectAllCountries, selectAllCountriesInfo } from '../store/countries/countries-selectors';\nimport { loadCountries } from '../store/countries/countries-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const countries = useSelector(selectAllCountries);\n  const {\n    status,\n    error,\n    qty\n  } = useSelector(selectAllCountriesInfo);\n  useEffect(() => {\n    dispatch(loadCountries());\n  }, [qty, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Can't fetch data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), status === 'loading' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: countries.map(c => {\n        const countryInfo = {\n          img: c.flags.png,\n          name: c.name,\n          info: [{\n            title: 'Population',\n            description: c.population.toLocaleString()\n          }, {\n            title: 'Region',\n            description: c.region\n          }, {\n            title: 'Capital',\n            description: c.capital\n          }]\n        };\n        return /*#__PURE__*/_jsxDEV(Card, {\n          onClick: () => navigate(`/country/${c.name}`),\n          ...countryInfo\n        }, c.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HomePage, \"8N76dlsvtJP0ayP/W2GYzKLx3XI=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/a1/Desktop/proj2-starter/src/pages/HomePage.jsx"],"names":["useNavigate","useDispatch","useSelector","useEffect","List","Card","Controls","selectAllCountries","selectAllCountriesInfo","loadCountries","HomePage","navigate","dispatch","countries","status","error","qty","map","c","countryInfo","img","flags","png","name","info","title","description","population","toLocaleString","region","capital"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,kBAAT,EAA6BC,sBAA7B,QAA2D,wCAA3D;AACA,SAASC,aAAT,QAA8B,sCAA9B;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAMY,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,SAAS,GAAGX,WAAW,CAACK,kBAAD,CAA7B;AACA,QAAM;AAACO,IAAAA,MAAD;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,MAAuBd,WAAW,CAACM,sBAAD,CAAxC;AAEAL,EAAAA,SAAS,CAAC,MAAK;AACbS,IAAAA,QAAQ,CAACH,aAAa,EAAd,CAAR;AACD,GAFQ,EAEN,CAACO,GAAD,EAAMJ,QAAN,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAGGG,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHZ,EAIGD,MAAM,KAAK,SAAX,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJ3B,eAME,QAAC,IAAD;AAAA,gBACOD,SAAS,CAACI,GAAV,CAAeC,CAAD,IAAO;AACpB,cAAMC,WAAW,GAAG;AAClBC,UAAAA,GAAG,EAAEF,CAAC,CAACG,KAAF,CAAQC,GADK;AAElBC,UAAAA,IAAI,EAAEL,CAAC,CAACK,IAFU;AAGlBC,UAAAA,IAAI,EAAE,CACJ;AACEC,YAAAA,KAAK,EAAE,YADT;AAEEC,YAAAA,WAAW,EAAER,CAAC,CAACS,UAAF,CAAaC,cAAb;AAFf,WADI,EAKJ;AACEH,YAAAA,KAAK,EAAE,QADT;AAEEC,YAAAA,WAAW,EAAER,CAAC,CAACW;AAFjB,WALI,EASJ;AACEJ,YAAAA,KAAK,EAAE,SADT;AAEEC,YAAAA,WAAW,EAAER,CAAC,CAACY;AAFjB,WATI;AAHY,SAApB;AAmBA,4BACE,QAAC,IAAD;AAEE,UAAA,OAAO,EAAE,MAAMnB,QAAQ,CAAE,YAAWO,CAAC,CAACK,IAAK,EAApB,CAFzB;AAAA,aAGMJ;AAHN,WACOD,CAAC,CAACK,IADT;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OA3BA;AADP;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAuCD,CAlDM;;GAAMb,Q;UACMV,W,EAEAC,W,EACCC,W,EACWA,W;;;KALlBQ,Q","sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { List } from '../components/List';\nimport { Card } from '../components/Card';\nimport { Controls } from '../components/Controls';\nimport { selectAllCountries, selectAllCountriesInfo } from '../store/countries/countries-selectors';\nimport { loadCountries } from '../store/countries/countries-actions';\n\nexport const HomePage = () => {\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n  const countries = useSelector(selectAllCountries);\n  const {status, error, qty} = useSelector(selectAllCountriesInfo);\n\n  useEffect(()=> {\n    dispatch(loadCountries())\n  }, [qty, dispatch])\n\n  return (\n    <>\n      <Controls />\n\n      {error && <h2>Can't fetch data</h2>}\n      {status === 'loading' && <h2>Loading...</h2> }\n\n      <List>\n            {countries.map((c) => {\n              const countryInfo = {\n                img: c.flags.png,\n                name: c.name,\n                info: [\n                  {\n                    title: 'Population',\n                    description: c.population.toLocaleString(),\n                  },\n                  {\n                    title: 'Region',\n                    description: c.region,\n                  },\n                  {\n                    title: 'Capital',\n                    description: c.capital,\n                  },\n                ],\n              };\n\n              return (\n                <Card\n                  key={c.name}\n                  onClick={() => navigate(`/country/${c.name}`)}\n                  {...countryInfo}\n                />\n              );\n            })}\n          </List>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}